name: Azure Pipelines
variables:
  python.version: '3.7.6'
stages:
- stage: Build
  jobs:
  - job: Build
    pool:

      name: Hosted Ubuntu 1604
    steps:

    - task: InstallSSHKey@0
      inputs:
        knownHostsEntry: 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ=='
        sshPublicKey: '$(MYPUBKEY)'
        sshKeySecureFile: 'id_rsa.pub'

    - task: DownloadSecureFile@1
      name: RSApublicKey
      inputs:
        secureFile: 'id_rsa.pub'

   
    #- script: |
    #    cd $(Build.SourcesDirectory)/terraform
    #    ls -all
    #    terraform init 
    #    terraform apply -auto-approve -var 'public_key=$(RSApublicKey.secureFilePath)'   
    #  displayName: Build terraform infrastructure 

    - task: CmdLine@2
      inputs:
        script: |
          sudo npm install -g newman
          sudo npm install -g newman-reporter-junitfull
      displayName: "Install newman"
   
    - task: CmdLine@2
      inputs:
        script: 'newman run $(Build.SourcesDirectory)/automatedtesting/postman/StarterAPIs.json -r cli,junitfull --reporter-junitfull-export JUnitReport.xml'
      displayName: "Run Postman test"
      continueOnError: True

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'JUnitReport.xml'
      continueOnError: True
    #- task: ArchiveFiles@2
    # displayName: 'Archive FakeRestAPI'
    #  inputs:
    #    rootFolderOrFile: '$(Build.SourcesDirectory)/automatedtesting/jmeter/fakerestapi'
    #    includeRootFolder: false
    #    archiveType: 'zip'
    #    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
    #- publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
    #  displayName: 'Upload Package'
    #  artifact: drop-fakerestapi
- stage:
  jobs:
  - deployment: FakeRestAPI
    pool:
      vmImage: 'Ubuntu-16.04'
    environment: 'TEST'
    strategy:
      runOnce:
        deploy:
          steps:
          #- task: AzureWebApp@1
          #  displayName: 'Deploy Azure Web App'
          #  inputs:
          #    azureSubscription: 'BohdanSubscriptions(5717f5b8-d0ac-41b0-a6b7-6c3a51c25847)'
          #    appType: 'webApp'
          #    appName: 'udacity-app-AppService'
          #    package: '$(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip'
          #    deploymentMethod: 'auto'
          - task: InstallSSHKey@0
            inputs:
              knownHostsEntry: 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ=='
              sshPublicKey: '$(MYPUBKEY)'
              sshKeySecureFile: 'id_rsa.pub'

          - task: DownloadSecureFile@1
            name: RSApublicKey
            inputs:
              secureFile: 'id_rsa.pub'

          - task: CmdLine@2
            inputs:
              script: |
                cd $(Build.SourcesDirectory)
                ls -all 
            displayName: "Test"
   
          - task: Bash@3
            displayName: Execute JMeter tests
            inputs:
              targetType: filePath
              filePath: '$(Build.SourcesDirectory)/automatedtesting/jmeter/test.sh'
              arguments: '$PWD Starter.jmx $(host)'
              workingDirectory: $(Build.SourcesDirectory)/automatedtesting/jmeter/
              failOnStderr: true
          
          - task: PublishPipelineArtifact@1
            displayName: Publish JMeter Report
            inputs:
              targetPath: $(Build.SourcesDirectory)/automatedtesting/jmeter/report/
              artifact: jmeter
  # - deployment: VMDeploy
  #   displayName: NAME
  #   environment:
  #     name:  ENVIRONMENT NAME
  #     resourceType: VirtualMachine
  #     tags: TAG NAME
  #   strategy:
  #     runOnce:
  #       deploy:
  #         steps:
  #         - task: Bash@3
  #           inputs:
  #             targetType: 'inline'
  #             script: |
  #               #! /bin/bash
                
  #               sudo apt-get upgrade -y
  #               sudo apt-get install python3-pip -y
  #               sudo apt-get install unzip -y
  #               sudo apt-get install -y chromium-browser
  #               pip3 install selenium
  #               export PATH=$PATH:some/path


